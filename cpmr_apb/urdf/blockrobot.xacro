<?xml version="1.0"?>
<!-- 
	This is a very simple robot designed to help explore how ROS and Gazebo
	can interact to simulate a very simple (point) robot.

	The robot consists of a block 10cm x 10cm x 5cm high with the density of copper (9.0 g/cc)
        Given the size of the block it has a mass of 4.5 kg
	
        Diagonal elements of the moments of inertia are 
          Ixx = 1/12 * M * (h^2+d^2) = 1/12 * 4.5 * (0.05^2+0.1^2) = 1.0e-3
          Iyy = 1/12 * M * (h^2+w^2) = 1/12 * 4.5 * (0.05^2+0.1^2) = 1.0e-3
          Izz = 1/12 * M * (w^2+d^2) = 1/12 * 4.5 = (0.1^2+0.1^2) = 7.5e-3
	Mounted on top of this is a cylinder r=5cm h=5cm which simulates a LIDAR with one sample every degree

	This cylinder is (almost) massless (0.01 kg)

        Diagonal elements of the moments of inertia are 
          Ixx = 1/12 * M * h^2 + 1/4 * M * r^2 = 1/12 * 0.01 * 0.05^2 + 1/4 * 0.01 * 0.05^2 = 2.0833x10^-6 + 6.25x10^-6 = 8.3383x10^-6
          Iyy = 1/12 * M * h^2 + 1/4 * M * r^2 = 1/12 * 0.01 * 0.05^2 + 1/4 * 0.01 * 0.05^2 = 2.0833x10^-6 + 6.25x10^-6 = 8.3383x10^-6
          Izz = 1/2 * M * r^2 = 1/2 * 0.01 * 0.01 * 0.05^2 = 1.25x 10^-7

	The robot is equipped with one LIDAR with 360 samples (one per degree) from -180 to +179

	Version 1.0.
	Copyright (c) Michael Jenkin and Gregory Dudek.

	-->

<robot name="br_spawn" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <!-- IMPORT PARAMETERS FILE -->
  <xacro:include filename="$(find cpmr_apb)/urdf/blockrobotdiminert.xacro" />
  <!-- NAMESPACE DEFINITION TF_PREFIX -->
  <xacro:arg name="tf_prefix" default="br" />
  <material name="red">
    <color rgba="1 0 0 1"/>
  </material>
  <material name="green">
    <color rgba="0 1 0 1"/>
  </material>
  <!-- GAZEBO MATERIAL DEFINITIONS -->
  <gazebo reference="$(arg tf_prefix)/base_link">
    <material>Gazebo/Green</material>
  </gazebo> 
  <gazebo reference="$(arg tf_prefix)/laser_link">
    <material>Gazebo/Red</material>
  </gazebo>
  <gazebo reference="$(arg tf_prefix)/camera_link">
    <material>Gazebo/Green</material>
  </gazebo>
  <gazebo reference="$(arg tf_prefix)/hat_link_brim">
    <material> Gazebo/Blue</material>
  </gazebo>
  <gazebo reference="$(arg tf_prefix)/hat_link_top">
    <material> Gazebo/Blue</material>
  </gazebo>
  <!-- BASE_FOOTPRINT LINK DEFINITIONS -->
  <link name="$(arg tf_prefix)/base_footprint">
  </link>
  <!-- BASE LINK DEFINITION -->
  <link name="$(arg tf_prefix)/base_link">
    <visual>
      <geometry>
        <box size="${b_l} ${b_w} ${b_h}" />
      </geometry>
      <material name="green"/>
    </visual>
    <collision>
      <geometry>
        <box size="${b_l} ${b_w} ${b_h}" />
      </geometry>
    </collision>
    <inertial>
      <mass value="${b_m}" />
      <inertia ixx="${b_ixx}" iyy="${b_iyy}" izz="${b_izz}" ixy="0" ixz="0" iyz="0" />
    </inertial>
  </link>
  <!-- LASER LINK DEFINITION -->
  <link name="$(arg tf_prefix)/laser_link">
    <visual>
      <geometry>
        <cylinder length="${c_h}" radius="${c_r}" />
      </geometry>
      <material name="red"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="${c_h}" radius="${c_r}" />
      </geometry>
    </collision>
    <inertial>
      <mass value="${c_m}" />
      <inertia ixx="${c_ixx}" iyy="${c_iyy}" izz="${c_izz}" ixy="0" ixz="0" iyz="0" />
    </inertial>
  </link>
  <!-- CAMERA LINK DEFINITION -->
  <link name="$(arg tf_prefix)/camera_link">
    <visual>
      <geometry>
        <cylinder length="${c_h}" radius="${c_r}" />
      </geometry>
      <material name="red"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="${c_h}" radius="${c_r}" />
      </geometry>
    </collision>
    <inertial>
      <mass value="${c_m}" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="${c_ixx}" iyy="${c_iyy}" izz="${c_izz}" ixy="0" ixz="0" iyz="0" />
    </inertial>
  </link>
  <!-- HAT BRIM LINK DEFINITION -->
  <link name="$(arg tf_prefix)/hat_link_brim">
    <visual>
      <geometry>
        <box size="0.15 0.1 0.02" />
      </geometry>
      <material name="green"/>
    </visual>
    <collision>
      <geometry>
        <box size="0.15 0.1 0.02" />
      </geometry>
    </collision>
    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>
  <!-- HAT TOP LINK DEFINITION -->
  <link name="$(arg tf_prefix)/hat_link_top">
    <visual>
      <geometry>
        <cylinder length="0.02" radius="0.05" />
      </geometry>
      <material name="green" />
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.02" radius="0.05" />
      </geometry>
    </collision>
    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>
  <!-- JOINT DEFINITIONS -->
  <joint name="base_joint" type="fixed">
    <origin xyz="0.0 0.0 0.025" rpy="0.0 0.0 0.0" />
    <parent link="$(arg tf_prefix)/base_footprint" />
    <child link="$(arg tf_prefix)/base_link" />
    <axis xyz="0 0 1" />
  </joint>
  <!-- LASER JOINT DEFINITION -->
  <joint name="laser_joint" type="fixed">
    <origin xyz="0.0 0.0 0.05" rpy="0.0 0.0 0.0" />
    <parent link="$(arg tf_prefix)/base_link" />
    <child link="$(arg tf_prefix)/laser_link" />
    <axis xyz="0 0 1" />
  </joint>
  <!-- CAMERA JOINT DEFINITION -->
  <joint name="camera_joint" type="fixed">
    <origin xyz="0.0 0.0 0.05" rpy="0.0 0.0 0.0" />
    <parent link="$(arg tf_prefix)/laser_link" />
    <child link="$(arg tf_prefix)/camera_link" />
    <axis xyz="0 0 1" />
  </joint>
  <!-- HAT BRIM JOINT DEFINITION -->	  
  <joint name="hat_joint_brim" type="fixed">
    <origin xyz="0.025 0.0 0.035" rpy="0.0 0.0 0.0" />
    <parent link="$(arg tf_prefix)/camera_link" />
    <child link="$(arg tf_prefix)/hat_link_brim" />
    <axis xyz="0 0 1" />
  </joint>
  <!-- HAT TOP JOINT DEFINITION --> 
  <joint name="hat_joint_top" type="fixed">
    <origin xyz="0.0 0.0 0.015"/>
    <parent link="$(arg tf_prefix)/hat_link_brim" />
    <child link="$(arg tf_prefix)/hat_link_top" />
    <axis xyz="0 0 1" />
  </joint>
  <!-- LASER GAZEBO PLUG-IN -->
  <gazebo reference="$(arg tf_prefix)/laser_link">
    <static>true</static>
    <sensor type="ray" name="head_hokuyo_sensor"> 
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1</resolution>
            <min_angle>-3.1415</min_angle>
            <max_angle>3.1240</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.20</min>
          <max>10.0</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>scan</topicName>
        <frameName>laser_link</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <!-- GAZEBO CAMERA PLUGIN -->
  <gazebo reference="$(arg tf_prefix)/camera_link">
    <sensor type="camera" name="vislight_cam">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
           <height>800</height>
           <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>  
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>	
        </noise>
      </camera>
      <plugin name="cam_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>	
        <cameraName>vislight_cam</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <!-- OBJECT CONTROLLER PLUGIN -->
  <gazebo>
    <plugin name="object_controller" filename="libgazebo_ros_planar_move.so">
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>br/odom</odometryFrame>
      <odometryRate>20.0</odometryRate>
      <robotBaseFrame>br/base_footprint</robotBaseFrame>
    </plugin>
  </gazebo>
</robot>
